CREATE DATABASE AH;
USE AH;
CREATE TABLE Students (
 StudentID INT,
 FirstName VARCHAR(50),
 LastName VARCHAR(50)
);
EXEC sp_rename 'STUDENTS.FirstName','1STNAME','COLUMN'
EXEC SP_RENAME 'STUDENTS','HERO'
SELECT * FROM HERO;
CREATE VIEW VIEW3 AS 
SELECT * FROM HERO 
WHERE STUDENTID=1;
SELECT * FROM VIEW3;
CREATE PROCEDURE PROCEDURE2 @EMPLOYEEID INT,@EMPLOYEENAME VARCHAR(30) AS

SELECT * FROM HERO 
WHERE STUDENTID=@EMPLOYEEID
;
EXEC PROCEDURE2 @EMPLOYEEID=1,@EMPLOYEENAME='A';

CREATE TABLE employees (
    employee_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    job_title VARCHAR(100),
    salary DECIMAL(10, 2)
);
INSERT INTO employees (employee_id, first_name, last_name, job_title, salary)
VALUES
    (1, 'John', 'Doe', 'Software Engineer', 75000.00),
    (2, 'Jane', 'Smith', 'Marketing Manager', 65000.00),
    (3, 'Michael', 'Johnson', 'Sales Representative', 55000.00);
	SELECT AVG(SALARY) FROM employees;
	SELECT COUNT(employee_id) FROM EMPLOYEES;
	SELECT SUM(SALARY) FROM employees;
	SELECT MAX(SALARY) FROM employees;
	SELECT MIN(SALARY) FROM employees;
	SELECT COS(0) FROM employees;
	SELECT GETDATE();
	SELECT DATEADD(DAY,25,'1972-05-6');
	SELECT DATENAME(WEEKDAY,'1972-05-6');
	SELECT DATEPART(MONTH,'1972-05-6');
	SELECT POWER(2,3)
	SELECT ROUND(3.889999,3)
	SELECT SIGN(-988)
	SELECT SQRT(9)
	SELECT FLOOR(3.5)
	SELECT CEILING(3.5)
	SELECT ABS(-3.5)
	SELECT ASCII('A')
    SELECT char(65)
	SELECT charindex('d','ahmad')
	SELECT len('ahmad')
	SELECT LOWER('HHHHH')
	SELECT UPPER('hhhhh')
	SELECT REPLICATE('CHAUDHRY',5)
	SELECT STUFF('CHAUDHRY AHMAD MUBASHIR',6,2,'   H')
	--STUFF STRING BATAI GAY STARTING INDEX BTAI GAY PHIR LENGTH BTAI GAI PHIR
	--REPLACEMENT STRING AI GA
	SELECT SUBSTRING('CHAUDHRY AHMAD MUBASHIR',10,5)

CREATE TABLE Courses (
 CourseID INT,
 CourseName VARCHAR(50),
 STUDENTID INT
);
INSERT INTO STUDENTS VALUES(1,'A','B'),(2,'C','D');
INSERT INTO Courses VALUES(1,'PHY',2),(2,'CHEM',3);
SELECT * FROM Students AS A
LEFT JOIN Courses AS C
ON A.StudentID=C.STUDENTID
WHERE C.StudentID IS NULL
UNION
SELECT * FROM Students AS A
RIGHT JOIN Courses AS C
ON A.StudentID=C.STUDENTID
WHERE A.StudentID IS NULL;
DROP TABLE STUDENTS;
DROP TABLE Courses;
SELECT * FROM STUDENT4;
CREATE PROCEDURE PROCEDURE1 AS
SELECT * FROM STUDENT4 GO;
EXEC PROCEDURE1;
CREATE PROCEDURE PROCEDURE3 @CITYNAME VARCHAR(25)
AS SELECT * FROM STUDENT4 WHERE CITYID=@CITYNAME;
--EXEC PROCEDURE2 @CITYNAME='PUNE';
EXEC PROCEDURE3 @CITYNAME=2;
CREATE PROCEDURE PROCEDURE4 @EMPNAME VARCHAR(30),@EMPCITY VARCHAR(30)
AS 
SELECT * FROM STUDENT4 WHERE NAME=@EMPNAME AND CITYNAME=@EMPCITY;
EXEC PROCEDURE4 @EMPNAME='AHMAD',@EMPCITY='PUNE';
DROP PROCEDURE PROCEDURE4;





CREATE TABLE STUDENT4(ID INT IDENTITY(1,1) PRIMARY KEY,NAME VARCHAR(50) CHECK (LEFT(NAME,1)='A'),CITYID INT,
CITYNAME VARCHAR(25),
FOREIGN KEY(CITYID) REFERENCES CITY4(ID) 
ON UPDATE CASCADE 
ON DELETE CASCADE);
CREATE TABLE CITY4(ID INT IDENTITY(1,1) PRIMARY KEY,CITYNAME VARCHAR(25));
INSERT INTO CITY4 VALUES('PUNE'),('MUMBAI'),('DEHLI');
INSERT INTO STUDENT4 VALUES('AHMAD',1,'PUNE'),('aEEMAB',2,'MUMBAI'),
('aARMAD',1,'PUNE');
UPDATE STUDENT4 SET NAME='ARMAN' WHERE NAME='aARMAD';
SELECT * FROM CITY4;
SELECT * FROM STUDENT4;
SELECT STUDENT4.*,CITY4.* FROM STUDENT4
INNER JOIN CITY4 ON(STUDENT4.CITYID=CITY4.ID);
SELECT STUDENT4.*,CITY4.* FROM STUDENT4
LEFT JOIN CITY4 ON(STUDENT4.CITYID=CITY4.ID);
SELECT STUDENT4.*,CITY4.* FROM STUDENT4
RIGHT JOIN CITY4 ON(STUDENT4.CITYID=CITY4.ID);
SELECT STUDENT4.*,CITY4.* FROM STUDENT4
FULL JOIN CITY4 ON(STUDENT4.CITYID=CITY4.ID);
SELECT STUDENT4.*,CITY4.* FROM STUDENT4
LEFT JOIN CITY4 ON(STUDENT4.CITYID=CITY4.ID)
WHERE CITY4.ID IS NULL;
CREATE VIEW VIEW2 AS
SELECT STUDENT4.NAME,STUDENT4.CITYNAME FROM STUDENT4;
SELECT * FROM VIEW2;

DROP TABLE CITY4;
DROP TABLE STUDENT4;
CREATE TABLE StudentCourses (
 StudentID INT,
 CourseID INT,
 PRIMARY KEY (StudentID, CourseID),
 FOREIGN KEY (StudentID) REFERENCES Students(StudentID),
 FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)
);
INSERT INTO Students (StudentID, FirstName, LastName)
VALUES
 (1, 'John', 'Doe'),
 (2, 'Jane', 'Smith'),
 (3, 'Michael', 'Johnson'),
 (4, 'Emily', 'Williams');
INSERT INTO Courses (CourseID, CourseName)
VALUES
 (101, 'Math'),
 (102, 'History'),
 (103, 'Science'),
 (104, 'Literature');
INSERT INTO StudentCourses (StudentID, CourseID)
VALUES
 (1, 101),
 (1, 103),
 (2, 102),
 (2, 103),
 (3, 101),
 (3, 104),
 (4, 102); create view specific_Student as
Select Courses.CourseName
from Courses
join StudentCourses
on (Courses.CourseID=StudentCourses.CourseID);DROP VIEW specific_Student;select * from specific_StudentSelect Students.FirstName,Students.LastName,Courses.CourseName
from Students
left join
StudentCourses
on(Students.StudentID=StudentCourses.StudentID)
left join
Courses
on(Courses.CourseID=StudentCourses.CourseID)--Select Students.FirstName,Students.LastName,Courses.CourseName
from Students
left join
StudentCourses
on(Students.StudentID=StudentCourses.StudentID)
right join
Courses
on(Courses.CourseID=StudentCourses.CourseID)	SELECT orders.ord_no,orders.purch_amt,customer.cust_name,customer.city	FROM orders,customer	WHERE 	purch_amt BETWEEN 500 AND 2000;	CREATE PROCEDURE PROCEDURE3 @EMPLOYID INT,@EMPLOYNAME VARCHAR(2)	AS	BEGIN	SELECT * FROM HERO WHERE STUDENTID=@EMPLOYID AND 1STNAME=@EMPLOYNAME	END;